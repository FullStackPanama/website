---
// Import necessary components and utilities
import MainLayout from "@/layouts/MainLayout.astro";
import CardRelated from "@components/ui/cards/CardRelated.astro";
import Bookmark from "@components/ui/buttons/Bookmark.astro";
import SocialShare from "@components/ui/buttons/SocialShare.astro";
import PostFeedback from "@components/ui/feedback/PostFeedback.astro";
import { Image } from "astro:assets";
import { capitalize, formatDate } from "@utils/utils";
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@data/constants";
import HorizontalSeparator from "@/components/ui/HorizontalSeparator.astro";

// getStaticPaths is used to pre-render all routes based on the blog posts
export async function getStaticPaths() {
  const blogPosts: CollectionEntry<"blog">[] = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
// Get the current post's data
const { post } = Astro.props;

const { Content } = await post.render();

// Get all blog posts
const blogPosts: CollectionEntry<"blog">[] = await getCollection("blog");

// Filter out the current post to get related posts
// Note: This is a very basic way of choosing related posts, just for the purpose of the example.
// In a production site, you might want to implement a more robust algorithm, choosing related posts based on tags, categories, dates, authors, or keywords.
// See example: https://blog.codybrunner.com/2024/adding-related-articles-with-astro-content-collections/
const relatedPosts: CollectionEntry<"blog">[] = blogPosts
  .filter((blogEntry) => blogEntry.slug !== post.slug)
  .filter((blogEntry) =>
    blogEntry.data.tags?.some((tag: string) => post.data.tags?.includes(tag))
  )
  .slice(0, 2);

const pageTitle: string = `${post.data.title} | ${SITE.title}`;

// Obtener la información del autor desde membersCollection
const author = post.data.author
  ? await getEntry("members", post.data.author)
  : null;
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "@id": `https://xopa.dev/blog/${post.slug}`,
    url: `https://xopa.dev/blog/${post.slug}`,
    name: pageTitle,
    headline: post.data.title,
    description: post.data.description,
    author: {
      "@type": "Person",
      name: post.data.author,
    },
    datePublished: post.data.pubDate,
    image: post.data.cardImage,
    isPartOf: {
      "@type": "WebSite",
      url: "https://xopa.dev",
      name: SITE.title,
      description: SITE.description_short,
    },
    inLanguage: "es-ES",
  }}
>
  <section class="mx-auto max-w-3xl px-4 pb-12 pt-6 sm:px-6 lg:px-8 lg:pt-10">
    <div class="max-w-2xl">
      <!-- Author info -->
      <div class="mb-6 flex items-center justify-between">
        <div class="flex w-full gap-x-5 sm:items-center sm:gap-x-3">
          <!-- Foto del autor -->
          {
            author && (
              <div class="flex-shrink-0">
                <Image
                  src={author.data.imagen}
                  alt={`Foto de ${author.data.nombre}`}
                  class="size-12 rounded-full object-cover"
                  draggable={"false"}
                  format={"avif"}
                />
              </div>
            )
          }
          <div class="grow">
            <div class="flex items-center justify-between gap-x-2">
              <div>
                <!-- Nombre del autor -->
                {
                  author && (
                    <div class="hs-tooltip inline-block [--placement:bottom] [--trigger:hover]">
                      <a
                        href={`/miembros/${author.slug}`}
                        class="font-bold text-neutral-700 hover:text-neutral-900 dark:text-neutral-300 dark:hover:text-neutral-100"
                      >
                        {author.data.nombre}
                      </a>
                    </div>
                  )
                }
                <!-- Datos de la publicación -->
                <ul class="text-xs text-neutral-500">
                  <li
                    class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                  >
                    {formatDate(post.data.pubDate)}
                  </li>
                  <li
                    class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                  >
                    {post.data.readTime} min read
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!--Blog post title-->
      <h2
        class="mb-3 text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-3xl"
      >
        {post.data.title}
      </h2>
      <!--Blog post contents-->
      <div class="mb-5 space-y-5 md:mb-8 md:space-y-8">
        {
          post.data.excerpt && (
            <p class="text-pretty text-lg text-neutral-700 dark:text-neutral-300">
              {post.data.excerpt}
            </p>
          )
        }
        <Image
          class="w-full rounded-xl object-cover"
          src={post.data.cardImage}
          alt={post.data.cardImageAlt}
          draggable={"false"}
          format={"avif"}
        />
        <Content />
      </div>

      <div
        class="mx-auto grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
      >
        <div class="flex flex-wrap items-center gap-2">
          <!-- Categoría -->
          <a
            href={`/blog/categoria/${post.data.category[0].toLowerCase()}`}
            class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-100 px-3 py-1.5 text-sm font-medium text-neutral-800 transition hover:bg-neutral-200 dark:bg-neutral-800 dark:text-neutral-200 dark:hover:bg-neutral-700"
          >
            {post.data.category[0]}
          </a>

          <!-- Separador -->
          <span class="text-neutral-300 dark:text-neutral-600">•</span>

          <!-- Tags -->
          {
            post.data.tags?.map((tag: string) => (
              <a
                href={`/blog/etiqueta/${tag.toLowerCase()}`}
                class="inline-flex items-center gap-x-1.5 rounded-full bg-neutral-100 px-3 py-1 text-sm font-medium text-neutral-800 transition hover:bg-neutral-200 dark:bg-neutral-700 dark:text-neutral-100 dark:hover:bg-neutral-600"
              >
                #{capitalize(tag)}
              </a>
            ))
          }
        </div>

        <!--Bookmark and Share buttons-->
        <div class="flex items-center justify-end gap-x-1.5">
          <Bookmark />
          <HorizontalSeparator />
          <div class="inline-flex">
            <SocialShare pageTitle={post.data.title} />
          </div>
        </div>
      </div>
    </div>

    <!-- TODO: Habilitar esta funcionalidad -->
    <PostFeedback
      title="¿Te resultó útil este artículo?"
      firstChoice="Sí"
      secondChoice="No"
    />
  </section>

  <!--Related articles section-->
  <section class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
    <div class="mb-10 max-w-2xl">
      <h2
        class="text-balance text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        Artículos relacionados
      </h2>
    </div>

    <div class="grid grid-cols-2 gap-6">
      {relatedPosts.map((entry) => <CardRelated blogEntry={entry} />)}
    </div>
  </section>
</MainLayout>
